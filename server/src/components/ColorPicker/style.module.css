.pickerContainer {
  flex-grow: 1;
  padding: 0.3em;
  border: 3px solid black;
  min-width: 350px;
  max-width: 500px;
  border-radius: 1.3em;
}

.picker {
  flex-grow: 1;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  justify-items: stretch;
  gap: 0px;
  border-radius: 1em;
  overflow: hidden;
}

.container {
  position: relative;
  aspect-ratio: 1/1;
  flex-grow: 1;

  display: flex;
  align-items: stretch;
  justify-content: stretch;

  transition-property: z-index;
  transition-duration: 0.1s;
  transition-timing-function: linear;
  z-index: 0;
}

.icon {
  position: absolute;
  opacity: 0;
  color: var(--selectionColor);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 0.4em;
  background-color: var(--iconColor);
  aspect-ratio: 1 / 1;
  pointer-events: none;
  overflow: visible;
  border-radius: 50%;
  transition: opacity 0.1s;
  font-size: 1em;
}

.container::after {
  content: '';
  position: absolute;
  top: 50%; /* Adjust to control distance from inner border */
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2.25em;
  height: 2.25em;
  border-radius: 50%;

  border: 2px dashed var(--iconColor); /* The "outer" border */
  z-index: 999999; /* To place it behind the main element */

  pointer-events: none;
  opacity: 0;
  animation: 30s linear 0s infinite running spin;
  transition: opacity 0.1s;
}

@media screen and (min-width: 700px) {
  .icon.icon {
    font-size: 1.25em;
  }
  .container::after {
    width: 3em;
    height: 3em;
  }
}

@keyframes spin {
  from {
    transform: translate(-50%, -50%) rotateZ(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotateZ(360deg);
  }
}

.container input {
  flex-grow: 1;
  -webkit-appearance: none; /* For Webkit browsers (Safari, Chrome) */
  appearance: none; /* Standard property */
  margin: 0;
  padding: 0;
  transition-property: border-radius transform;
  transition-duration: 0.25s;
  transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
  transform: scale(101%);
  background-color: var(--selectionColor);
  border-radius: 0px;

  cursor: pointer !important;
  height: auto;
}

.container:has(input:hover) {
  transition-duration: 0s;
  z-index: 2;

  input:not(:checked):not(:active) {
    transition-duration: 0.25s;
    transform: scale(125%);
    border-radius: 10px;
    transition-timing-function: cubic-bezier(0.25, 1, 0.5, 1);
  }
}

.container:has(input:active) {
  transition-duration: 0s;
  z-index: 2;

  input {
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
    transform: scale(107%);
    border-radius: 10px;
  }
  .icon {
    transition-duration: 0.3s;
    opacity: 1;
  }
  &::after {
    transition-duration: 0.3s;
    opacity: 1;
  }
}

.container:has(input:checked) {
  transition-duration: 0.1s;
  z-index: 1;

  input {
    transition-duration: 0.3s;
    transform: scale(120%);
    border-radius: 10px;
  }
  .icon {
    opacity: 1;
  }
  &::after {
    opacity: 1;
  }
}
