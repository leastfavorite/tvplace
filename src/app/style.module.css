.colorPicker {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    justify-items: stretch;
    gap: 0px;
    border-radius: 2em;
    overflow: hidden;
    border:
}

.colorContainer {
    position: relative;
    aspect-ratio: 1/1;
    flex-grow: 1;

    display: flex;
    align-items: stretch;
    justify-content: stretch;

    transition-property: z-index;
    transition-duration: 0.1s;
    transition-timing-function: linear;
    z-index: 0;
}

@media screen and (min-width: 1000px) {
    .colorPicker {
        grid-template-columns: repeat(16, 1fr);
    }
}

.colorIcon {
    position: absolute;
    opacity: 0;
    color: var(--selectionColor);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 0.4em;
    background-color: var(--iconColor);
    aspect-ratio: 1 / 1;
    pointer-events: none;
    overflow: visible;
    border-radius: 50%;
    transition: opacity 0.1s;
}

.colorContainer::after {
  content: "";
  position: absolute;
  top: 50%; /* Adjust to control distance from inner border */
  left: 50%;
  transform: translate(-50%, -50%);
  width: 3em;
  height: 3em;
  border-radius: 50%;

  border: 2px dashed var(--iconColor); /* The "outer" border */
  z-index: 999999; /* To place it behind the main element */

  pointer-events: none;
  opacity: 0;
  animation: 30s linear 0s infinite running spin;
  transition: opacity 0.1s;
}

@keyframes spin {
    from {
      transform: translate(-50%, -50%) rotateZ(0deg);
    }
    to {
      transform: translate(-50%, -50%) rotateZ(360deg);
    }
}

.color {
    flex-grow: 1;
    -webkit-appearance: none; /* For Webkit browsers (Safari, Chrome) */
    appearance: none; /* Standard property */
    margin: 0;
    padding: 0;
    transition-property: border-radius transform;
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
    transform: scale3d(101%, 100%, 100%);
    background-color: var(--selectionColor);
}


.colorContainer:has(input:hover) {
    transition-duration: 0s;
    z-index: 2;

    input {
        transform: scale3d(110%, 110%, 100%);
        border-radius: 5px;
    }
    input:not(:checked):not(:active) {
        transform: scale3d(125%, 125%, 100%);
    }
}

.colorContainer:has(input:active) {
    transition-duration: 0s;
    z-index: 2;


    input {
        transition-duration: 0.05s;
        transform: scale3d(105%, 105%, 100%);
        border-radius: 5px;
    }
    .colorIcon {
        transition-duration: 0.2s;
        opacity: 1;
    }
    &::after {
        transition-duration: 0.2s;
        opacity: 1;
    }
}

.colorContainer:has(input:checked) {
    transition-duration: 0.1s;
    z-index: 1;

    input {
        transition-duration: 0.1s;
        transform: scale3d(110%, 110%, 100%);
        border-radius: 5px;
    }
    .colorIcon {
        opacity: 1;
    }
    &::after {
        opacity: 1;
    }
}
